FROM internal_data.crash_hist_cad_ped p1
WHERE p1.eid::text = m.eid::text)) AND NOT (EXISTS ( SELECT 1
FROM internal_data.crash_hist_cad_bike b1
WHERE b1.eid::text = m.eid::text)) AND m.x_cord <> 0::numeric)a
LEFT JOIN internal_data.bpd_crashfatalities ON internal_data.bpd_crashfatalities.eid = a.eid
GROUP BY  CAST(a.dispatch_ts AS DATE)
ORDER BY  CAST(a.dispatch_ts AS DATE) DESC
"})
closeAllConnections()
STR.2.dt <- max(as.Date(rawSTR.2$rctdate))
STR.2.dt1 <- STR.2.dt
day(STR.2.dt1) <- 5
month(STR.2.dt1) <- month(STR.2.dt1)-1
STR.2.dt2 <- STR.2.dt
month(STR.2.dt2) <- month(STR.2.dt2)-2
STR.2.dt3 <- STR.2.dt
month(STR.2.dt3) <- month(STR.2.dt3)-3
STR.2.dt1y <- STR.2.dt1
year(STR.2.dt1y) <- year(STR.2.dt1y)-1
#STR.2.M <- round(sum(rawSTR.2$fatal_collisions_tdy[which(format(as.Date(rawSTR.2$rctdate), "%Y") == format(STR.2.dt, "%Y") & format(as.Date(rawSTR.2$rctdate), "%B-%Y") == format(STR.2.dt, "%B-%Y") )])/sum(rawSTR.2$total_collisions_tdy[which(format(as.Date(rawSTR.2$rctdate), "%Y") == format(STR.2.dt, "%Y") & format(as.Date(rawSTR.2$rctdate), "%B-%Y") == format(STR.2.dt, "%B-%Y") )])*100, digits = 1)
STR.2.M1 <- round(sum(rawSTR.2$fatal_collisions_tdy[which(format(as.Date(rawSTR.2$rctdate), "%Y") == format(STR.2.dt1, "%Y") & format(as.Date(rawSTR.2$rctdate), "%B-%Y") == format(STR.2.dt1, "%B-%Y") )])/sum(rawSTR.2$total_collisions_tdy[which(format(as.Date(rawSTR.2$rctdate), "%Y") == format(STR.2.dt1, "%Y") & format(as.Date(rawSTR.2$rctdate), "%B-%Y") == format(STR.2.dt1, "%B-%Y") )])*100, digits = 1)
STR.2.M2 <- round(sum(rawSTR.2$fatal_collisions_tdy[which(format(as.Date(rawSTR.2$rctdate), "%Y") == format(STR.2.dt2, "%Y") & format(as.Date(rawSTR.2$rctdate), "%B-%Y") == format(STR.2.dt2, "%B-%Y") )])/sum(rawSTR.2$total_collisions_tdy[which(format(as.Date(rawSTR.2$rctdate), "%Y") == format(STR.2.dt2, "%Y") & format(as.Date(rawSTR.2$rctdate), "%B-%Y") == format(STR.2.dt2, "%B-%Y") )])*100, digits = 1)
STR.2.M3 <- round(sum(rawSTR.2$fatal_collisions_tdy[which(format(as.Date(rawSTR.2$rctdate), "%Y") == format(STR.2.dt3, "%Y") & format(as.Date(rawSTR.2$rctdate), "%B-%Y") == format(STR.2.dt3, "%B-%Y") )])/sum(rawSTR.2$total_collisions_tdy[which(format(as.Date(rawSTR.2$rctdate), "%Y") == format(STR.2.dt3, "%Y") & format(as.Date(rawSTR.2$rctdate), "%B-%Y") == format(STR.2.dt3, "%B-%Y") )])*100, digits = 1)
STR.2.MY <- round(sum(rawSTR.2$fatal_collisions_tdy[which(format(as.Date(rawSTR.2$rctdate), "%Y") == format(STR.2.dt1y, "%Y") & format(as.Date(rawSTR.2$rctdate), "%B-%Y") == format(STR.2.dt1y, "%B-%Y") )])/sum(rawSTR.2$total_collisions_tdy[which(format(as.Date(rawSTR.2$rctdate), "%Y") == format(STR.2.dt1y, "%Y") & format(as.Date(rawSTR.2$rctdate), "%B-%Y") == format(STR.2.dt1y, "%B-%Y") )])*100, digits = 1)
STR.2.Y <- round(sum(rawSTR.2$fatal_collisions_tdy[which(format(as.Date(rawSTR.2$rctdate), "%Y") == format(STR.2.dt, "%Y") )])/sum(rawSTR.2$total_collisions_tdy[which(format(as.Date(rawSTR.2$rctdate), "%Y") == format(STR.2.dt, "%Y") )])*100, digits = 1)
STR.2 <- data.frame("Collision Fatality Rate",
round(mean(c(STR.2.M1, STR.2.M2, STR.2.M3)), digits = 1),
STR.2.M3,
STR.2.M2,
STR.2.M1,
STR.2.MY,
STR.2.Y)
colnames(STR.2) <- c("Metric",
"Target",
paste(format(STR.2.dt3, "%B %Y")),
paste(format(STR.2.dt2, "%B %Y")),
paste(format(STR.2.dt1, "%B %Y")),
paste(format(STR.2.dt1y, "%B %Y")),
paste(format(STR.2.dt, "%Y"), "to Date"))
EDW_GENdb <- dbConnect(odbc::odbc(), .connection_string = "driver={SQL Server};server=VSQL25;database=EDW_Generic;trusted_connection=true")
rawSTR.3 <- dbGetQuery(EDW_GENdb, {"SELECT
'Overtime Paid' AS METRIC,
CAST(([Pay Period End]) AS DATE) AS DATE,
ROUND(SUM([Quantity]), 1) AS TOTAL_HOURS,
ROUND(SUM([Earnings]), 1) AS TOTAL_PAID
FROM [EDW_Generic].[dbo].[DOIT_Overtime]
WHERE [Dept ID] = 251000 AND
[Earn Code] NOT IN ('B11', 'B12')
GROUP BY CAST(([Pay Period End]) AS DATE)
ORDER BY CAST(([Pay Period End]) AS DATE) DESC
"})
closeAllConnections()
STR.3.dt <- max(as.Date(rawSTR.3$DATE))
STR.3.dt1 <- STR.3.dt
day(STR.3.dt1) <- 5
month(STR.3.dt1) <- month(STR.3.dt1)-1
STR.3.dt2 <- STR.3.dt
month(STR.3.dt2) <- month(STR.3.dt2)-2
STR.3.dt3 <- STR.3.dt
month(STR.3.dt3) <- month(STR.3.dt3)-3
STR.3.dt1y <- STR.3.dt1
year(STR.3.dt1y) <- year(STR.3.dt1y)-1
#STR.3.M <- round(mean(rawSTR.3$TOTAL_PAID[which(format(as.Date(rawSTR.3$DATE), "%Y") == format(STR.3.dt, "%Y") & format(as.Date(rawSTR.3$DATE), "%B-%Y") == format(STR.3.dt, "%B-%Y") )])/sum(rawSTR.3$total_collisions_tdy[which(format(as.Date(rawSTR.3$DATE), "%Y") == format(STR.3.dt, "%Y") & format(as.Date(rawSTR.3$DATE), "%B-%Y") == format(STR.3.dt, "%B-%Y") )])*100, digits = 1)
STR.3.M1 <- round(mean(rawSTR.3$TOTAL_PAID[which(format(as.Date(rawSTR.3$DATE), "%Y") == format(STR.3.dt1, "%Y") & format(as.Date(rawSTR.3$DATE), "%B-%Y") == format(STR.3.dt1, "%B-%Y") )])/10, digits = 0)
STR.3.M2 <- round(mean(rawSTR.3$TOTAL_PAID[which(format(as.Date(rawSTR.3$DATE), "%Y") == format(STR.3.dt2, "%Y") & format(as.Date(rawSTR.3$DATE), "%B-%Y") == format(STR.3.dt2, "%B-%Y") )])/10, digits = 0)
STR.3.M3 <- round(mean(rawSTR.3$TOTAL_PAID[which(format(as.Date(rawSTR.3$DATE), "%Y") == format(STR.3.dt3, "%Y") & format(as.Date(rawSTR.3$DATE), "%B-%Y") == format(STR.3.dt3, "%B-%Y") )])/10, digits = 0)
STR.3.MY <- round(mean(rawSTR.3$TOTAL_PAID[which(format(as.Date(rawSTR.3$DATE), "%Y") == format(STR.3.dt1y, "%Y") & format(as.Date(rawSTR.3$DATE), "%B-%Y") == format(STR.3.dt1y, "%B-%Y") )])/10, digits = 0)
STR.3.Y <- round(mean(rawSTR.3$TOTAL_PAID[which(format(as.Date(rawSTR.3$DATE), "%Y") == format(STR.3.dt, "%Y"))])/10, digits = 0)
STR.3 <- data.frame("Average Daily Overtime Paid",
round(mean(c(STR.3.M1, STR.3.M2, STR.3.M3)), digits = 0),
STR.3.M3,
STR.3.M2,
STR.3.M1,
STR.3.MY,
STR.3.Y)
colnames(STR.3) <- c("Metric",
"Target",
paste(format(STR.3.dt3, "%B %Y")),
paste(format(STR.3.dt2, "%B %Y")),
paste(format(STR.3.dt1, "%B %Y")),
paste(format(STR.3.dt1y, "%B %Y")),
paste(format(STR.3.dt, "%Y"), "to Date"))
EDW_GENdb <- dbConnect(odbc::odbc(), .connection_string = "driver={SQL Server};server=VSQL25;database=EDW_Generic;trusted_connection=true")
rawSTR.4 <- dbGetQuery(EDW_GENdb, {"SELECT
CAST(([Pay Period End]) AS DATE) AS DATE,
'Average Daily Overtime Hours' AS METRIC,
ROUND(SUM([Quantity]), 1) AS TOTAL_HOURS,
ROUND(SUM([Earnings]), 1) AS TOTAL_PAID
FROM [EDW_Generic].[dbo].[DOIT_Overtime]
WHERE [Dept ID] = 251000 AND
[Earn Code] IN ('O10', 'O11', 'O12', 'XBO', 'XOT', 'XDT')
GROUP BY CAST(([Pay Period End]) AS DATE)
ORDER BY CAST(([Pay Period End]) AS DATE) DESC
"})
closeAllConnections()
STR.4.dt <- max(as.Date(rawSTR.4$DATE))
STR.4.dt1 <- STR.4.dt
day(STR.4.dt1) <- 5
month(STR.4.dt1) <- month(STR.4.dt1)-1
STR.4.dt2 <- STR.4.dt
month(STR.4.dt2) <- month(STR.4.dt2)-2
STR.4.dt3 <- STR.4.dt
month(STR.4.dt3) <- month(STR.4.dt3)-3
STR.4.dt1y <- STR.4.dt1
year(STR.4.dt1y) <- year(STR.4.dt1y)-1
#STR.4.M <- round(sum(rawSTR.4$TOTAL_HOURS[which(format(as.Date(rawSTR.4$DATE), "%Y") == format(STR.4.dt, "%Y") & format(as.Date(rawSTR.4$DATE), "%B-%Y") == format(STR.4.dt, "%B-%Y") )])/sum(rawSTR.4$total_collisions_tdy[which(format(as.Date(rawSTR.4$DATE), "%Y") == format(STR.4.dt, "%Y") & format(as.Date(rawSTR.4$DATE), "%B-%Y") == format(STR.4.dt, "%B-%Y") )])*100, digits = 1)
STR.4.M1 <- round(mean(rawSTR.4$TOTAL_HOURS[which(format(as.Date(rawSTR.4$DATE), "%Y") == format(STR.4.dt1, "%Y") & format(as.Date(rawSTR.4$DATE), "%B-%Y") == format(STR.4.dt1, "%B-%Y") )])/10, digits = 0)
STR.4.M2 <- round(mean(rawSTR.4$TOTAL_HOURS[which(format(as.Date(rawSTR.4$DATE), "%Y") == format(STR.4.dt2, "%Y") & format(as.Date(rawSTR.4$DATE), "%B-%Y") == format(STR.4.dt2, "%B-%Y") )])/10, digits = 0)
STR.4.M3 <- round(mean(rawSTR.4$TOTAL_HOURS[which(format(as.Date(rawSTR.4$DATE), "%Y") == format(STR.4.dt3, "%Y") & format(as.Date(rawSTR.4$DATE), "%B-%Y") == format(STR.4.dt3, "%B-%Y") )])/10, digits = 0)
STR.4.MY <- round(mean(rawSTR.4$TOTAL_HOURS[which(format(as.Date(rawSTR.4$DATE), "%Y") == format(STR.4.dt1y, "%Y") & format(as.Date(rawSTR.4$DATE), "%B-%Y") == format(STR.4.dt1y, "%B-%Y") )])/10, digits = 0)
STR.4.Y <- round(mean(rawSTR.4$TOTAL_HOURS[which(format(as.Date(rawSTR.4$DATE), "%Y") == format(STR.4.dt, "%Y") )])/10, digits = 0)
STR.4 <- data.frame("Average Daily Overtime Hours",
round(mean(c(STR.4.M1, STR.4.M2, STR.4.M3)), digits = 0),
STR.4.M3,
STR.4.M2,
STR.4.M1,
STR.4.MY,
STR.4.Y)
colnames(STR.4) <- c("Metric",
"Target",
paste(format(STR.4.dt3, "%B %Y")),
paste(format(STR.4.dt2, "%B %Y")),
paste(format(STR.4.dt1, "%B %Y")),
paste(format(STR.4.dt1y, "%B %Y")),
paste(format(STR.4.dt, "%Y"), "to Date"))
STR.TRAN <- rbind(STR.1,
STR.2,
STR.3,
STR.4)
#STR.TRAN[,2:7] <- round(STR.TRAN[,2:7], digits = 0)
### DEPARTMENT OF PUBLIC WORKS ###
LAGANdb <- dbConnect(odbc::odbc(), .connection_string = "driver={SQL Server};server=zpcrmbi01;database=LaganPDM;uid=Tableau_prod_readusr; pwd=Tableau_prod_readusr@2015")
rawSTR.5 <- dbGetQuery(LAGANdb, {"SELECT
'CODE ENFORCEMENT ON-TIME %' as metric_name,
MAX(CONVERT(DATE,[CLOSED_DT])) AS RCTDATE,
COUNT(DISTINCT
CASE WHEN [CLOSED_DT] <= [SLA_TARGET_DT]
THEN [CASE_ENQUIRY_ID]
ELSE NULL
END
) as numerator_value,
COUNT(DISTINCT [CASE_ENQUIRY_ID]) AS denominator_value
FROM
[LaganPDM].[dbo].[lgnbo_CASE_ENQUIRY_B00_DENYHS]
WHERE
[QUEUE] = 'PWDx_Code Enforcement'
AND [CASE_STATUS] = 'Closed'
AND [SOURCE] NOT IN ('City Worker App','Employee Generated')
AND [SLA_TARGET_DT] IS NOT NULL
AND CONVERT(DATE,[CLOSED_DT]) < CONVERT(DATE,GETDATE())
GROUP BY CONVERT(DATE,[CLOSED_DT])
ORDER BY CONVERT(DATE,[CLOSED_DT]) DESC
"})
closeAllConnections()
STR.5.dt <- max(as.Date(rawSTR.5$RCTDATE))
STR.5.dt1 <- STR.5.dt
day(STR.5.dt1) <- 5
month(STR.5.dt1) <- month(STR.5.dt1)-1
STR.5.dt2 <- STR.5.dt
month(STR.5.dt2) <- month(STR.5.dt2)-2
STR.5.dt3 <- STR.5.dt
month(STR.5.dt3) <- month(STR.5.dt3)-3
STR.5.dt1y <- STR.5.dt1
year(STR.5.dt1y) <- year(STR.5.dt1y)-1
STR.5.M1 <- round(sum(rawSTR.5$numerator_value[which(format(as.Date(rawSTR.5$RCTDATE), "%Y") == format(STR.5.dt1, "%Y") & format(as.Date(rawSTR.5$RCTDATE), "%B-%Y") == format(STR.5.dt1, "%B-%Y") )])/sum(rawSTR.5$denominator_value[which(format(as.Date(rawSTR.5$RCTDATE), "%Y") == format(STR.5.dt1, "%Y") & format(as.Date(rawSTR.5$RCTDATE), "%B-%Y") == format(STR.5.dt1, "%B-%Y") )])*100, digits = 1)
STR.5.M2 <- round(sum(rawSTR.5$numerator_value[which(format(as.Date(rawSTR.5$RCTDATE), "%Y") == format(STR.5.dt2, "%Y") & format(as.Date(rawSTR.5$RCTDATE), "%B-%Y") == format(STR.5.dt2, "%B-%Y") )])/sum(rawSTR.5$denominator_value[which(format(as.Date(rawSTR.5$RCTDATE), "%Y") == format(STR.5.dt2, "%Y") & format(as.Date(rawSTR.5$RCTDATE), "%B-%Y") == format(STR.5.dt2, "%B-%Y") )])*100, digits = 1)
STR.5.M3 <- round(sum(rawSTR.5$numerator_value[which(format(as.Date(rawSTR.5$RCTDATE), "%Y") == format(STR.5.dt3, "%Y") & format(as.Date(rawSTR.5$RCTDATE), "%B-%Y") == format(STR.5.dt3, "%B-%Y") )])/sum(rawSTR.5$denominator_value[which(format(as.Date(rawSTR.5$RCTDATE), "%Y") == format(STR.5.dt3, "%Y") & format(as.Date(rawSTR.5$RCTDATE), "%B-%Y") == format(STR.5.dt3, "%B-%Y") )])*100, digits = 1)
STR.5.MY <- round(sum(rawSTR.5$numerator_value[which(format(as.Date(rawSTR.5$RCTDATE), "%Y") == format(STR.5.dt1y, "%Y") & format(as.Date(rawSTR.5$RCTDATE), "%B-%Y") == format(STR.5.dt1y, "%B-%Y") )])/sum(rawSTR.5$denominator_value[which(format(as.Date(rawSTR.5$RCTDATE), "%Y") == format(STR.5.dt1y, "%Y") & format(as.Date(rawSTR.5$RCTDATE), "%B-%Y") == format(STR.5.dt1y, "%B-%Y") )])*100, digits = 1)
STR.5.Y <- round(sum(rawSTR.5$numerator_value[which(format(as.Date(rawSTR.5$RCTDATE), "%Y") == format(STR.5.dt, "%Y"))])/sum(rawSTR.5$denominator_value[which(format(as.Date(rawSTR.5$RCTDATE), "%Y") == format(STR.5.dt, "%Y"))])*100, digits = 1)
STR.5 <- data.frame("Code Enforcement On-Time %",
round(mean(c(STR.5.M1, STR.5.M2, STR.5.M3)), digits = 1),
STR.5.M3,
STR.5.M2,
STR.5.M1,
STR.5.MY,
STR.5.Y)
colnames(STR.5) <- c("Metric",
"Target",
paste(format(STR.5.dt3, "%B %Y")),
paste(format(STR.5.dt2, "%B %Y")),
paste(format(STR.5.dt1, "%B %Y")),
paste(format(STR.5.dt1y, "%B %Y")),
paste(format(STR.5.dt, "%Y"), "to Date"))
hansdb <- dbConnect(odbc::odbc(), .connection_string = 'driver={SQL Server};server=ZPSQLTMP1;database=HansenProd;trusted_connection=true')
rawSTR.6 <- dbGetQuery(hansdb, {"SELECT
'Code Enforcement Tickets Issued Daily' AS Metric,
CAST(CASEDTTM AS DATE) AS date,
COUNT(CASE WHEN [FEEDESC] != 'Processing Fee' THEN 1 END) AS NUM_VIO
FROM [HansenProd].[dbo].[vw_CEPTicketsWithViolationAndFeesSingleParcel]
GROUP BY CAST(CASEDTTM AS DATE)
ORDER BY CAST(CASEDTTM AS DATE) DESC
"})
closeAllConnections()
rawSTR.6 <- rawSTR.6[-which(is.na(rawSTR.6$date)),]
STR.6.dt <- max(as.Date(rawSTR.6$date))
STR.6.dt1 <- STR.6.dt
day(STR.6.dt1) <- 5
month(STR.6.dt1) <- month(STR.6.dt1)-1
STR.6.dt2 <- STR.6.dt
month(STR.6.dt2) <- month(STR.6.dt2)-2
STR.6.dt3 <- STR.6.dt
month(STR.6.dt3) <- month(STR.6.dt3)-3
STR.6.dt1y <- STR.6.dt1
year(STR.6.dt1y) <- year(STR.6.dt1y)-1
STR.6.M1 <- round(sum(rawSTR.6$NUM_VIO[which(format(as.Date(rawSTR.6$date), "%Y") == format(STR.6.dt1, "%Y") & format(as.Date(rawSTR.6$date), "%B-%Y") == format(STR.6.dt1, "%B-%Y") )]), digits = 1)
STR.6.M2 <- round(sum(rawSTR.6$NUM_VIO[which(format(as.Date(rawSTR.6$date), "%Y") == format(STR.6.dt2, "%Y") & format(as.Date(rawSTR.6$date), "%B-%Y") == format(STR.6.dt2, "%B-%Y") )]), digits = 1)
STR.6.M3 <- round(sum(rawSTR.6$NUM_VIO[which(format(as.Date(rawSTR.6$date), "%Y") == format(STR.6.dt3, "%Y") & format(as.Date(rawSTR.6$date), "%B-%Y") == format(STR.6.dt3, "%B-%Y") )]), digits = 1)
STR.6.MY <- round(sum(rawSTR.6$NUM_VIO[which(format(as.Date(rawSTR.6$date), "%Y") == format(STR.6.dt1y, "%Y") & format(as.Date(rawSTR.6$date), "%B-%Y") == format(STR.6.dt1y, "%B-%Y") )]), digits = 1)
STR.6.Y <- round(sum(rawSTR.6$NUM_VIO[which(format(as.Date(rawSTR.6$date), "%Y") == format(STR.6.dt, "%Y") )]), digits = 1)/as.numeric(format(STR.6.dt, "%m"))
STR.6 <- data.frame("Numer of Violations Issued Monthly",
metric = round(mean(c(STR.6.M1, STR.6.M2, STR.6.M3)), digits = 0),
STR.6.M3,
STR.6.M2,
STR.6.M1,
STR.6.MY,
STR.6.Y)
colnames(STR.6) <- c("Metric",
"Target",
paste(format(STR.6.dt3, "%B %Y")),
paste(format(STR.6.dt2, "%B %Y")),
paste(format(STR.6.dt1, "%B %Y")),
paste(format(STR.6.dt1y, "%B %Y")),
paste(format(STR.6.dt, "%Y"), "to Date"))
LAGANdb <- dbConnect(odbc::odbc(), .connection_string = "driver={SQL Server};server=zpcrmbi01;database=LaganPDM;uid=Tableau_prod_readusr; pwd=Tableau_prod_readusr@2015")
rawSTR.10 <- dbGetQuery(LAGANdb, {"SELECT
'MISSED TRASH ON-TIME %' as metric_name,
CONVERT(DATE,[CLOSED_DT]) AS date,
COUNT(DISTINCT
CASE WHEN [CLOSED_DT] <= [SLA_TARGET_DT]
THEN [CASE_ENQUIRY_ID]
ELSE NULL
END
) as numerator_value,
COUNT(DISTINCT [CASE_ENQUIRY_ID]) as denominator_value
FROM [LaganPDM].[dbo].[lgnbo_CASE_ENQUIRY_B00_DENYHS]
WHERE [CASE_STATUS] = 'Closed'
AND [QUEUE] LIKE '%PWDx_Missed Trash%'
AND [SLA_TARGET_DT] IS NOT NULL
AND [SOURCE] NOT IN ('City Worker App','Employee Generated')
AND CONVERT(DATE,[CLOSED_DT]) < CONVERT(DATE,GETDATE())
GROUP BY CONVERT(DATE,[CLOSED_DT])
ORDER BY CONVERT(DATE,[CLOSED_DT]) DESC
"})
closeAllConnections()
if (nrow(rawSTR.10[-which(is.na(rawSTR.10$date)),]) > 0){
rawSTR.10 <- rawSTR.10[-which(is.na(rawSTR.10$date)),]
}
STR.10.dt <- max(as.Date(rawSTR.10$date))
STR.10.dt1 <- STR.10.dt
day(STR.10.dt1) <- 5
month(STR.10.dt1) <- month(STR.10.dt1)-1
STR.10.dt2 <- STR.10.dt
month(STR.10.dt2) <- month(STR.10.dt2)-2
STR.10.dt3 <- STR.10.dt
month(STR.10.dt3) <- month(STR.10.dt3)-3
STR.10.dt1y <- STR.10.dt1
year(STR.10.dt1y) <- year(STR.10.dt1y)-1
STR.10.M1 <- round(sum(rawSTR.10$numerator_value[which(format(as.Date(rawSTR.10$date), "%Y") == format(STR.10.dt1, "%Y") & format(as.Date(rawSTR.10$date), "%B-%Y") == format(STR.10.dt1, "%B-%Y") )])/sum(rawSTR.10$denominator_value[which(format(as.Date(rawSTR.10$date), "%Y") == format(STR.10.dt1, "%Y") & format(as.Date(rawSTR.10$date), "%B-%Y") == format(STR.10.dt1, "%B-%Y") )])*100, digits = 1)
STR.10.M2 <- round(sum(rawSTR.10$numerator_value[which(format(as.Date(rawSTR.10$date), "%Y") == format(STR.10.dt2, "%Y") & format(as.Date(rawSTR.10$date), "%B-%Y") == format(STR.10.dt2, "%B-%Y") )])/sum(rawSTR.10$denominator_value[which(format(as.Date(rawSTR.10$date), "%Y") == format(STR.10.dt2, "%Y") & format(as.Date(rawSTR.10$date), "%B-%Y") == format(STR.10.dt2, "%B-%Y") )])*100, digits = 1)
STR.10.M3 <- round(sum(rawSTR.10$numerator_value[which(format(as.Date(rawSTR.10$date), "%Y") == format(STR.10.dt3, "%Y") & format(as.Date(rawSTR.10$date), "%B-%Y") == format(STR.10.dt3, "%B-%Y") )])/sum(rawSTR.10$denominator_value[which(format(as.Date(rawSTR.10$date), "%Y") == format(STR.10.dt3, "%Y") & format(as.Date(rawSTR.10$date), "%B-%Y") == format(STR.10.dt3, "%B-%Y") )])*100, digits = 1)
STR.10.MY <- round(sum(rawSTR.10$numerator_value[which(format(as.Date(rawSTR.10$date), "%Y") == format(STR.10.dt1y, "%Y") & format(as.Date(rawSTR.10$date), "%B-%Y") == format(STR.10.dt1y, "%B-%Y") )])/sum(rawSTR.10$denominator_value[which(format(as.Date(rawSTR.10$date), "%Y") == format(STR.10.dt1y, "%Y") & format(as.Date(rawSTR.10$date), "%B-%Y") == format(STR.10.dt1y, "%B-%Y") )])*100, digits = 1)
STR.10.Y <- round(sum(rawSTR.10$numerator_value[which(format(as.Date(rawSTR.10$date), "%Y") == format(STR.10.dt, "%Y"))])/sum(rawSTR.10$denominator_value[which(format(as.Date(rawSTR.10$date), "%Y") == format(STR.10.dt, "%Y") )])*100, digits = 1)
STR.10 <- data.frame("% Missed Trash Cases Responded to On Time",
80,
STR.10.M3,
STR.10.M2,
STR.10.M1,
STR.10.MY,
STR.10.Y)
colnames(STR.10) <- c("Metric",
"Target",
paste(format(STR.10.dt3, "%B %Y")),
paste(format(STR.10.dt2, "%B %Y")),
paste(format(STR.10.dt1, "%B %Y")),
paste(format(STR.10.dt1y, "%B %Y")),
paste(format(STR.10.dt, "%Y"), "to Date"))
LAGANdb <- dbConnect(odbc::odbc(), .connection_string = "driver={SQL Server};server=zpcrmbi01;database=LaganPDM;uid=Tableau_prod_readusr; pwd=Tableau_prod_readusr@2015")
rawSTR.11 <- dbGetQuery(LAGANdb, {" SELECT
'Overdue Street Light Outage Requests' as metric_name,
CONVERT(DATE,[OPEN_DT]) AS open_date,
COUNT(DISTINCT
CASE WHEN CONVERT(DATE,[SLA_TARGET_DT]) < CONVERT(DATE,GETDATE())
THEN [CASE_ENQUIRY_ID]
ELSE NULL
END
) as open_cases,
COUNT(DISTINCT [CASE_ENQUIRY_ID]) as all_cases
FROM [LaganPDM].[dbo].[lgnbo_CASE_ENQUIRY_B00_DENYHS]
WHERE [QUEUE] LIKE '%PWDx_Street Light Outages%'
AND [CASE_STATUS] = 'Open'
AND [SLA_TARGET_DT] IS NOT NULL
AND [SOURCE] NOT IN ('City Worker App','Employee Generated')
GROUP BY CONVERT(DATE,[OPEN_DT])
ORDER BY CONVERT(DATE,[OPEN_DT]) DESC
"})
closeAllConnections()
if (nrow(rawSTR.11[-which(is.na(rawSTR.11$open_date)),]) > 0){
rawSTR.11 <- rawSTR.11[-which(is.na(rawSTR.11$open_date)),]
}
STR.11.dt <- max(as.Date(rawSTR.11$open_date))
STR.11.dt1 <- STR.11.dt
day(STR.11.dt1) <- 5
month(STR.11.dt1) <- month(STR.11.dt1)-1
STR.11.dt2 <- STR.11.dt
month(STR.11.dt2) <- month(STR.11.dt2)-2
STR.11.dt3 <- STR.11.dt
month(STR.11.dt3) <- month(STR.11.dt3)-3
STR.11.dt1y <- STR.11.dt1
year(STR.11.dt1y) <- year(STR.11.dt1y)-1
STR.11.M1 <- sum(rawSTR.11$open_cases[which(format(as.Date(rawSTR.11$open_date), "%Y") == format(STR.11.dt1, "%Y") & format(as.Date(rawSTR.11$open_date), "%B-%Y") == format(STR.11.dt1, "%B-%Y") )])
STR.11.M2 <- sum(rawSTR.11$open_cases[which(format(as.Date(rawSTR.11$open_date), "%Y") == format(STR.11.dt2, "%Y") & format(as.Date(rawSTR.11$open_date), "%B-%Y") == format(STR.11.dt2, "%B-%Y") )])
STR.11.M3 <- sum(rawSTR.11$open_cases[which(format(as.Date(rawSTR.11$open_date), "%Y") == format(STR.11.dt3, "%Y") & format(as.Date(rawSTR.11$open_date), "%B-%Y") == format(STR.11.dt3, "%B-%Y") )])
STR.11.MY <- sum(rawSTR.11$open_cases[which(format(as.Date(rawSTR.11$open_date), "%Y") == format(STR.11.dt1y, "%Y") & format(as.Date(rawSTR.11$open_date), "%B-%Y") == format(STR.11.dt1y, "%B-%Y") )])
STR.11.Y <- sum(rawSTR.11$open_cases[which(format(as.Date(rawSTR.11$open_date), "%Y") == format(STR.11.dt, "%Y"))])
STR.11 <- data.frame("Overdue Street Light Outage Requests",
mean(c(STR.11.M3, STR.11.M2, STR.11.M1)),
STR.11.M3,
STR.11.M2,
STR.11.M1,
STR.11.MY,
STR.11.Y)
colnames(STR.11) <- c("Metric",
"Target",
paste(format(STR.11.dt3, "%B %Y")),
paste(format(STR.11.dt2, "%B %Y")),
paste(format(STR.11.dt1, "%B %Y")),
paste(format(STR.11.dt1y, "%B %Y")),
paste(format(STR.11.dt, "%Y"), "to Date"))
STR.DPW <- rbind(STR.5,
STR.6,
STR.10,
STR.11)
STR.DPW[,2:7] <- round(STR.DPW[,2:7], digits = 1)
st.to <- Sys.time()
##### WARNINGS CHECK #####
w <- summary(warnings())
if (as.numeric(w[[1]]) > 0){
print("There were warnings!")
}
#############################  CSV WRITING  #############################
write.csv(AF, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/AF.csv", row.names = FALSE)
write.csv(AC.1, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/AC.csv", row.names = FALSE)
write.csv(BFD, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/BFD.csv", row.names = FALSE)
write.csv(BPD, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/BPD.csv", row.names = FALSE)
write.csv(BPD.11, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/BPD-OTHU.csv", row.names = FALSE)
write.csv(BPD.12, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/BPD-OTPU.csv", row.names = FALSE)
write.csv(BPS.1, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/BPS.csv", row.names = FALSE)
write.csv(BPS.Full, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/BPSFULL.csv", row.names = FALSE)
write.csv(CE, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/CE.csv", row.names = FALSE)
write.csv(ED, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/ED.csv", row.names = FALSE)
write.csv(EVISD, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/EV-ISD.csv", row.names = FALSE)
write.csv(EVPARK, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/EV-PARK.csv", row.names = FALSE)
write.csv(HHS.BPHC, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/HHS-BPHC.csv", row.names = FALSE)
write.csv(HOU, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/HOU.csv", row.names = FALSE)
write.csv(IT, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/DOIT.csv", row.names = FALSE)
write.csv(OP, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/OP.csv", row.names = FALSE)
write.csv(STR.TRAN, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/STR-TRAN.csv", row.names = FALSE)
write.csv(STR.DPW, "H:/My Documents/Side Projects/Dashboard Demo/Dashboard/www/Table Outputs/STR-DPW.csv", row.names = FALSE)
#####
to <- Sys.time()
di <- to-ti
af.di <- af.to-af.ti
ac.di <- ac.to-ac.ti
bfd.di <- bfd.to-bfd.ti
bpd.di  <- bpd.to-bpd.ti
bps.di <- bps.to-bps.ti
ce.di <- ce.to-ce.ti
ed.di <- ed.to-ed.ti
ev.di <- ev.to-ev.ti
hhs.di <- hhs.to-hhs.ti
hou.di <- hou.to-hou.ti
it.di <- it.to-it.ti
op.di <- op.to-op.ti
st.di <- st.to-st.ti
cat(paste("AnF", round(af.di, digits = 3), "mins"),
paste("AC", round(ac.di, digits = 3), "mins"),
paste("BFD", round(bfd.di, digits = 3), "mins"),
paste("BPD", round(bpd.di, digits = 3), "mins"),
paste("BPS", round(bps.di, digits = 3), "mins"),
paste("CE", round(ce.di, digits = 3), "mins"),
paste("ED", round(ed.di, digits = 3), "mins"),
paste("EV", round(ev.di, digits = 3), "mins"),
paste("HHS", round(hhs.di, digits = 3), "mins"),
paste("HOU", round(hou.di, digits = 3), "mins"),
paste("IT", round(it.di, digits = 3), "mins"),
paste("OPS", round(op.di, digits = 3), "mins"),
paste("ST", round(st.di, digits = 3), "mins"),
sep = "\n")
print(paste("Total Time:",di)
print(paste("Total Time:",di))
print(paste("Total Time:",di))
af.di
paste("AnF", af.di)
class(af.di)
cat("AnF", af.di, "----",
"AC", ac.di, "----",
"BFD", bfd.di,"----",
"BPD", bpd.di, "----",
"BPS", bps.di,"----",
"CE", ce.di,"----",
"ED", ed.di,"----",
"EV", ev.di,"----",
"HHS", hhs.di, "----",
"HOU", hou.di, "----",
"IT", it.di, "----",
"OPS", op.di, "----",
"ST", st.di, "----",
sep = "\n")
print(cat("AnF", af.di, "----",
"AC", ac.di, "----",
"BFD", bfd.di,"----",
"BPD", bpd.di, "----",
"BPS", bps.di,"----",
"CE", ce.di,"----",
"ED", ed.di,"----",
"EV", ev.di,"----",
"HHS", hhs.di, "----",
"HOU", hou.di, "----",
"IT", it.di, "----",
"OPS", op.di, "----",
"ST", st.di, "----",
sep = "\n"))
cat("AnF", as.difftime(af.di, units = "mins"), "----",
"AC", as.difftime(ac.di, units = "mins"), "----",
"BFD", as.difftime(bfd.di, units = "mins"),"----",
"BPD", as.difftime(bpd.di, units = "mins"), "----",
"BPS", as.difftime(bps.di, units = "mins"),"----",
"CE", as.difftime(ce.di, units = "mins"),"----",
"ED", as.difftime(ed.di, units = "mins"),"----",
"EV", as.difftime(ev.di, units = "mins"),"----",
"HHS", as.difftime(hhs.di, units = "mins"), "----",
"HOU", as.difftime(hou.di, units = "mins"), "----",
"IT", as.difftime(it.di, units = "mins"), "----",
"OPS", as.difftime(op.di, units = "mins"), "----",
"ST", as.difftime(st.di, units = "mins"), "----",
sep = "\n")
af.di <- difftime(af.ti, af.to, units = "mins")
af.di
af.di <- difftime(af.to, af.ti, units = "mins")
af.di
af.di <- difftime(af.to, af.ti, units = "mins")
ac.di <- difftime(ac.to,ac.ti, units = "mins")
bfd.di <- difftime(bfd.to,bfd.ti, units = "mins")
bpd.di  <- difftime(bpd.to,bpd.ti, units = "mins")
bps.di <- difftime(bps.to,bps.ti, units = "mins")
ce.di <- difftime(ce.to,ce.ti, units = "mins")
ed.di <- difftime(ed.to,ed.ti, units = "mins")
ev.di <- difftime(ev.to,ev.ti, units = "mins")
hhs.di <- difftime(hhs.to,hhs.ti, units = "mins")
hou.di <- difftime(hou.to,hou.ti, units = "mins")
it.di <- difftime(it.to,it.ti, units = "mins")
op.di <- difftime(op.to,op.ti, units = "mins")
st.di <- difftime(st.to,st.ti, units = "mins")
cat("AnF", as.difftime(af.di, units = "mins"), "----",
"AC", as.difftime(ac.di, units = "mins"), "----",
"BFD", as.difftime(bfd.di, units = "mins"),"----",
"BPD", as.difftime(bpd.di, units = "mins"), "----",
"BPS", as.difftime(bps.di, units = "mins"),"----",
"CE", as.difftime(ce.di, units = "mins"),"----",
"ED", as.difftime(ed.di, units = "mins"),"----",
"EV", as.difftime(ev.di, units = "mins"),"----",
"HHS", as.difftime(hhs.di, units = "mins"), "----",
"HOU", as.difftime(hou.di, units = "mins"), "----",
"IT", as.difftime(it.di, units = "mins"), "----",
"OPS", as.difftime(op.di, units = "mins"), "----",
"ST", as.difftime(st.di, units = "mins"), "----",
sep = "\n")
cat("AnF", af.di, "----",
"AC", ac.di , "----",
"BFD", bfd.di,"----",
"BPD", bpd.di, "----",
"BPS", bps.di,"----",
"CE", ce.di,"----",
"ED", ed.di,"----",
"EV", ev.di,"----",
"HHS", hhs.di, "----",
"HOU", hou.di, "----",
"IT", it.di, "----",
"OPS", op.di, "----",
"ST", st.di, "----",
sep = "\n")
dep <- c("AnF",
"AC",
"BFD",
"BPD",
"BPS",
"CE",
"ED",
"EV",
"HHS",
"HOU",
"IT",
"OPS",
"ST")
tm <- c(af.di,
ac.di,
bfd.di,
bpd.di,
bps.di,
ce.di,
ed.di,
ev.di,
hhs.di,
hou.di,
it.di,
op.di,
st.di)
tmmet <- data.frame("Department" = dep,
"Time (mins)" = tm)
tmmet
print(tmmet)
print(paste("Total Time:",di))
